name: Deploy Apps on Push to Prod

on:
  push:
    branches:
      - prod

jobs:
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prod' && contains(github.event.head_commit.message, 'apps/frontend')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.x

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Dependencies
        run: cd apps/frontend && pnpm install

      - name: Build Nuxt Application
        run: cd apps/frontend && NUXT_APP_STAGE=production pnpm run build

      - name: SSH Deploy to Frontend Server
        uses: easingthemes/ssh-deploy@v2.1.4
        with:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
          REMOTE_HOST: ${{ secrets.DEPLOY_HOST }}
          REMOTE_USER: ${{ secrets.DEPLOY_USER }}
          REMOTE_PORT: ${{ secrets.DEPLOY_PORT }}
          SOURCE: "apps/frontend/dist/"
          TARGET: ${{ secrets.DEPLOY_TARGET_frontend }}

  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prod' && contains(github.event.head_commit.message, 'apps/backend')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.x

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Dependencies
        run: cd apps/backend && pnpm install

      - name: Build Backend Application
        run: cd apps/backend && pnpm run build

      - name: SSH Deploy to Backend Server
        uses: easingthemes/ssh-deploy@v2.1.4
        with:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
          REMOTE_HOST: ${{ secrets.DEPLOY_HOST }}
          REMOTE_USER: ${{ secrets.DEPLOY_USER }}
          REMOTE_PORT: ${{ secrets.DEPLOY_PORT }}
          SOURCE: "apps/backend/build/"
          TARGET: ${{ secrets.DEPLOY_TARGET_back }}

  deploy:
    runs-on: ubuntu-latest
    needs: [deploy-backend]

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.DEPLOY_USER }}
          SSH_KEY: ${{ secrets.DEPLOY_KEY }}
          SSH_HOST: ${{ secrets.DEPLOY_HOST }}

      - name: Build and Run App
        run: ssh staging 'cd backend; pm2 stop asp-app-api ; pm2 delete asp-app-api ; pm2 start npm --name "asp-app-api" -- start'
